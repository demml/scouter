name: Integration

on:
  push:
    branches:
      - main
      - master
  pull_request:

jobs:
  test-os:
    name: test ${{ matrix.os }}-${{ matrix.python-version }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        python-version: ["3.11"]

    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v4

      - name: install rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: cache rust
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}-${{ matrix.python-version }}-v1

      - name: Set up uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create virtual environment
        working-directory: ./py-scouter
        run: make setup.project

      - name: Start kafka
        run: docker compose -f "docker-compose.yml" up -d --build

      - name: Wait for kafka until it is ready
        run: |
          while ! docker exec scouter-kafka-1 kafka-topics --bootstrap-server kafka:29092 --list; do
            sleep 10
          done

      - name: Install dependencies
        working-directory: ./py-scouter
        run: make setup.integration

      - name: Run tests
        working-directory: ./py-scouter
        run: make test.integration

      - name: Stop Containers
        if: always()
        run: docker compose -f "docker-compose.yml" down
